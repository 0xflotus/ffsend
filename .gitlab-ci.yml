image: "rust:slim"

stages:
  - check
  - build
  - test
  - release

variables:
  RUST_VERSION: stable

# Cargo artifacts caching per Rust version and pipeline
cache:
  key: "$RUST_VERSION"
  paths:
    - /usr/local/rustup/
    - /usr/local/cargo/
    - target/

# Install compiler and OpenSSL dependencies
before_script:
  - apt-get update -y
  - apt-get install -y --no-install-recommends build-essential pkg-config libssl-dev
  - rustup install $RUST_VERSION && rustup default $RUST_VERSION
  - rustc --version && cargo --version

# Variable defaults
variables:
  RUST_VERSION: stable

# Check on stable, beta and nightly 
.check-base: &check-base
  stage: check
  script:
    - cargo check --all --verbose
    - cargo check --no-default-features --all --verbose
    - cargo check --features no-color --all --verbose
rust-stable:
  <<: *check-base
rust-beta:
  <<: *check-base
  variables:
    RUST_VERSION: beta
  cache: {}
rust-nightly:
  <<: *check-base
  variables:
    RUST_VERSION: nightly
  cache: {}

# Create a release build artifact for future testing
build:
  stage: build
  script:
    - cargo build --all --release --verbose
    - mv target/release/ffsend ./ffsend
  artifacts:
    paths:
      - ffsend
    expire_in: 1 month

# Run the unit tests through Cargo
cargo-test:
  stage: test
  dependencies: []
  script:
    - cargo test --all --verbose

# Run integration test with the public Send service
public-send-test:
  stage: test
  image: debian
  dependencies:
    - build
  variables:
    GIT_STRATEGY: none
  cache: {}
  before_script: []
  script:
    - head -c1m </dev/urandom >testfile
    - ./ffsend upload testfile -n testfile.bin -a -d 10 -p secret -I
    # TODO: download this file, compare checksums
